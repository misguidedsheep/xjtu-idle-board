<script>
  token = window.localStorage.getItem('xjtu-idle-token');
  // 定义全局变量
  var userDescription;
  var userQQ;
  var userWeChat;
  var itemSet;

  if (token) {
    // 获取用户信息的请求 (Token √)
    $.ajax({
      type: 'GET',
      url: '/getUserInfo',
      headers: { 'Authorization': `Bearer ${token}` },
      success: function (res) {
        if (res.toString().startsWith('ERROR')) {
          // ! 后端返回错误
          console.log(res)
          alert("获取用户信息失败, 请检查登录状态/联系管理员")
        } else {
          // √ 返回正确, 获得结果
          userSQLResult = res;
          // 顶部导航栏更新 (替代 views/public/display.ejs)
          $("#topNav_user").html(userSQLResult.UserName);
          $("#topNav_user").attr('href', '/myhome');
          // 用户页信息栏更新
          $("#userName").val(userSQLResult.UserName)
          $("#netID").val(userSQLResult.NetID)
          $("#userDescription").val(userSQLResult.UserDescription)
          $("#userQQ").val(userSQLResult.UserQQ)
          $("#userWeChat").val(userSQLResult.UserWeChat)

          // 修改全局变量
          userDescription = userSQLResult.UserDescription;
          userQQ = userSQLResult.UserQQ;
          userWeChat = userSQLResult.UserWeChat;

        }
      }
    })

    // 获取用户发布的商品信息的请求 (Token √)
    $.ajax({
      type: 'GET',
      url: '/getUserItemInfo',
      headers: { 'Authorization': `Bearer ${token}` },
      success: (res) => {
        if (res.toString().startsWith('ERROR')) {
          if(! res.toString().replace("ERROR: ", "").startsWith("SQL_NO_RESULT")){
            // ! 后端返回错误
            alert("获取物品信息失败, 请检查登录状态/联系管理员")
            console.log(res)
          }
        } else {
          //  本地存储一份物品信息
          itemSet = res;
          itemSet.forEach(item => {
            $("#itemNameSelect").append(`<option item-id="${item.ItemID}">${item.ItemName}</option>`)
          });
          itemSet.forEach(item => {
            // 根据当前物品的状态渲染相应元素
            if (item.ItemName == $("#itemNameSelect").children('option:selected').val()) {
              $("#itemCoverSelect").attr('src', `upload/${item.CoverFileName}`)
              if (item.OnSale) {
                $("#buttonOptionOnSale").addClass("active");
                $("#buttonOptionSold").removeClass("active");
              } else {
                $("#buttonOptionSold").addClass("active");
                $("#buttonOptionOnSale").removeClass("active");
              }
            }
          });
        }
      }
    })
  }

  // 启用编辑按钮 点击事件
  $("#enableEditing").click(() => {
    // 按钮(组)显示与隐藏
    $("#viewModeButtons").css("display", "none");
    $("#editModeButtons").css("display", "");
    // 激活输入框
    let toEdit = $(".editable")
    toEdit.removeAttr("readonly")
    // 如果未设置则清空默认值
    if ($("#userDescription").val() == "NotSet") $("#userDescription").val("");
    if ($("#userQQ").val() == "NotSet") $("#userQQ").val("");
    if ($("#userWeChat").val() == "NotSet") $("#userWeChat").val("");
  })

  // 应用更改按钮 点击事件
  $("#applyEdition").click(() => {
    // 应用更改请求 (Token √)
    $.ajax({
      type: "GET",
      url: '/modifyUserInfo',
      headers: { 'Authorization': `Bearer ${token}` },
      data: {
        'userDescription': $("#userDescription").val(),
        'userQQ': $("#userQQ").val(),
        'userWeChat': $("#userWeChat").val()
      },
      success: (res) => {
        if (res.toString().startsWith('ERROR')) {
          alert("提交失败, 请重试!", res)
          console.log(res);
          // 刷新页面
          location.reload();
          return;
        } else {
          alert("更改成功")
        }
      }
    })
    // 恢复只读
    $(".editable").attr("readonly", 'true')
    // 按钮(组)显示与隐藏
    $("#viewModeButtons").css("display", "");
    $("#editModeButtons").css("display", "none");
  })

  // 取消更改按钮 点击事件
  $("#cancelEdition").click(() => {
    // 恢复信息
    $("#userDescription").val(userDescription)
    $("#userQQ").val(userQQ)
    $("#userWeChat").val(userWeChat)
    // 恢复只读
    $(".editable").attr("readonly", "true")
    // 按钮(组)显示与隐藏
    $("#viewModeButtons").css("display", "");
    $("#editModeButtons").css("display", "none");
  })

  // 应用修改商品状态按钮 点击事件
  $("#changeOnSale").click(() => {
    var itemID = $("#itemNameSelect").children('option:selected').attr("item-id");
    var onSale = true;
    var toDelete = false;

    if ($("#buttonOptionOnSale").hasClass("active")) onSale = true;
    if ($("#buttonOptionSold").hasClass("active")) onSale = false;
    if ($("#buttonOptionDelete").hasClass("active")) toDelete = true;

    // 更改商品状态请求 (Token √)
    $.ajax({
      type: "GET",
      url: '/changeItemStatus',
      headers: { 'Authorization': `Bearer ${token}` },
      data: {
        'itemID': itemID,
        'onSale': onSale,
        'toDelete': toDelete
      },
      success: function (res) {
        if (!res.toString().startsWith('ERROR')) {
          // 成功反馈
          alert("更改成功")
          itemSet.forEach(item => {
            // 修改本地储存的状态
            if (item.ItemID == itemID) {
              item.OnSale = onSale;
            }
            // 如果进行了删除操作就重新加载
            if (toDelete) {
              location.reload();
            }
          });
        } else {
          // ! 从后端接收到错误
          // 失败反馈
          alert("更改失败!", res)
          console.log(res);
        }
      }

    })
  })

  // 商品下拉选择框 改变事件
  $("#itemNameSelect").change(function () {
    itemSet.forEach(item => {
      if (item.ItemID == $("#itemNameSelect").children('option:selected').attr("item-id")) {
        $("#itemCoverSelect").attr('src', `upload/${item.CoverFileName}`)
        if (item.OnSale) {
          $("#buttonOptionOnSale").addClass("active");
          $("#buttonOptionSold").removeClass("active");
          $("#buttonOptionDelete").removeClass("active");
        } else {
          $("#buttonOptionSold").addClass("active");
          $("#buttonOptionOnSale").removeClass("active");
          $("#buttonOptionDelete").removeClass("active");
        }
      }

    });

  })

  // 删除选择按钮 聚焦事件
  $("#buttonOptionDelete").focusin(() => {
    $("#deleteWarning").css("display", "");
  })

  // 删除选择按钮 失焦事件
  $("#buttonOptionDelete").focusout(() => {
    $("#deleteWarning").css("display", "none");
  })
</script>